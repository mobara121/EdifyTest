{"version":3,"sources":["Menus.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","container","listItem","maxWidth","backgroundColor","padding","spacing","margin","boxShadow","openItem","display","pic1","width","marginLeft","marginTop","minWidth","label","nested","flexDirection","justifyContent","details","textAlign","Menus","calorie","pic","totalTime","ingredients","classes","useState","open","setOpen","roundCalory","Math","round","className","List","src","alt","ListItem","onClick","ListItemText","primary","Collapse","in","timeout","unmountOnExit","component","disablePadding","map","ingredient","text","title","fontSize","color","form","input","height","btn","togglebtn","marginRight","App","menus","setMenus","filter","setFilter","query","setQuery","selected","setSelected","useEffect","timer","setTimeout","fetchMenus","clearTimeout","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","ToggleButton","menu","recipe","calories","image","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d455dcff.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n      container:{\r\n        \r\n      },\r\n    listItem: {\r\n        maxWidth: '75%',\r\n        backgroundColor: '#fbfbfb',\r\n        padding: theme.spacing(3),\r\n        margin: '20px auto',\r\n        // borderRadius: '5px',\r\n        boxShadow: \"15px 5px 25px 5px rgba(0, 0, 0, 0.918), 0 0 40px rgba(0, 0, 0, 0.3) inset\",\r\n    },\r\n    openItem:{\r\n        display: 'flex',\r\n    },\r\n    pic1: {\r\n        width: '10%',\r\n        marginLeft: '10px',\r\n        marginTop: '10px',\r\n        minWidth: 100,\r\n    },\r\n    label:{\r\n        margin: '10px auto',\r\n        padding: '5px'\r\n    },\r\n    nested: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n    },\r\n    details: {\r\n        textAlign: 'right',\r\n    }\r\n  }),\r\n);\r\n\r\nfunction Menus({label, calorie, pic, totalTime, ingredients}){\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(true);\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n      };\r\n      \r\n    var roundCalory = Math.round(calorie); \r\n    \r\n    return(\r\n        <div className={classes.container}>\r\n            <List className={classes.listItem}>\r\n                <div className={classes.openItem}>\r\n                    <img className={classes.pic1} src={pic} alt=\"\" />\r\n                    <h2 className={classes.label}>{label}</h2>                            \r\n                </div>                   \r\n                    <ListItem className={classes.details} onClick={handleClick}>\r\n                        <ListItemText primary=\"Details\" />\r\n                        {open ? <ExpandMore /> : <ExpandLess />}\r\n                    </ListItem>\r\n                    <Collapse in={!open} timeout=\"auto\" unmountOnExit>\r\n                        <List component=\"div\" disablePadding>\r\n                            <ListItem className={classes.nested}>\r\n                                <p>Calories: {roundCalory} cal.</p>\r\n                                <p>Cooking Time: {totalTime} min.</p>\r\n                                <p>Ingredients:</p>\r\n                                <ol>{ingredients.map(ingredient => (\r\n                                    <li>{ingredient.text}</li>\r\n                                ))}\r\n                                </ol>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Collapse>\r\n            </List>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Menus;","import React, {useEffect, useState} from \"react\";\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Menus from './Menus';\r\nimport './App.css';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({  \r\n     \r\n    title:{\r\n      fontSize: '40px',\r\n      color: '#fff',\r\n    },\r\n    form: {\r\n        margin: '10px auto',        \r\n    },\r\n    input: {\r\n      width: '70%',\r\n      maxWidth: 200,\r\n      height: '40px',\r\n      margin: '0 5px',\r\n      fontSize: '17px',\r\n      textAlign: 'center',\r\n    },\r\n    btn: {\r\n      fontSize: '17px',\r\n      margin: '0 5px',\r\n      padding: '10px'\r\n    },\r\n    togglebtn: {\r\n      \r\n      width: '5px',\r\n      height: '5px', \r\n      textAlign: 'left',\r\n      marginRight: '10px'\r\n    },\r\n    '@global': {\r\n      '.MuiToggleButton-root:hover':{\r\n        backgroundColor: '#fff',\r\n      },\r\n      '.MuiToggleButton-root.Mui-selected, .MuiToggleButton-root.Mui-selected:hover': {\r\n        backgroundColor: 'pink',\r\n        color: 'red'\r\n      }},\r\n  }),\r\n);\r\n\r\nfunction App() {\r\n\r\n  const APP_ID = \"c2d8408d\";\r\n  const APP_KEY = \"63f4e35e34280e381a49ebb618139872\";\r\n\r\n  const [menus, setMenus] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n  const [query, setQuery] = useState('tofu');\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  const classes = useStyles();\r\n    \r\n  useEffect(() => { \r\n    if(selected === true){\r\n      const timer = setTimeout(() => {\r\n        fetchMenus();\r\n        //console.log('fetch was delayed'); \r\n      }, 2000);\r\n      return () => clearTimeout(timer);\r\n    }else{fetchMenus();}   \r\n  }, [query]);\r\n\r\n  const fetchMenus = async()=>{\r\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\r\n    const data = await response.json();\r\n    setMenus(data.hits);\r\n    //console.log('data came back');\r\n  };\r\n  \r\n  const updateFilter = e =>{\r\n    setFilter(e.target.value);\r\n  };\r\n  \r\n  const getFilter = e =>{\r\n    e.preventDefault();\r\n    setQuery(filter);\r\n    setFilter('');   \r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">      \r\n      <h1 className={classes.title}>TODAY'S MENU</h1>\r\n      <form onSubmit={getFilter} className={classes.form}>\r\n        <input className={classes.input} type=\"text\" value={filter} onChange={updateFilter}/>\r\n        <button className={classes.btn} type=\"submit\">Filter</button>              \r\n      </form>\r\n      <ToggleButton\r\n          className={classes.togglebtn}\r\n          value=\"check\"\r\n          selected={selected}\r\n          onChange={() => {\r\n            setSelected(!selected);\r\n          }}>\r\n            \r\n          <CheckIcon />\r\n      </ToggleButton><span>click for fetch delay</span>\r\n      \r\n     {menus && menus.map(menu => {\r\n          return <Menus \r\n          key={menu.recipe.label}\r\n          label={menu.recipe.label}\r\n              calorie={menu.recipe.calories}\r\n              pic={menu.recipe.image}\r\n              totalTime={menu.recipe.totalTime}\r\n              ingredients={menu.recipe.ingredients}\r\n              />;\r\n        })}     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}